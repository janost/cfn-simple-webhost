{
  "variables": {
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "aws_region": "{{env `AWS_REGION`}}",
    "ami_name": "simple-web-base-{{timestamp}}"
  },

  "builders": [{
    "ami_name": "{{user `ami_name` | clean_ami_name}}",
    "type": "amazon-ebs",
    "access_key": "{{user `aws_access_key`}}",
    "secret_key": "{{user `aws_secret_key`}}",
    "region": "{{user `aws_region`}}",
    "iam_instance_profile": "PackerRole",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "ubuntu/images/*ubuntu-bionic-18.04-amd64-server-*",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t3.micro",
    "tags": {
      "Name": "{{user `ami_name`}}",
      "OS_Version": "Ubuntu",
      "Release": "Bionic",
      "Base_AMI_Name": "{{ .SourceAMIName }}"
    },
    "snapshot_tags": {
      "Name": "{{user `ami_name`}}",
      "OS_Version": "Ubuntu",
      "Release": "Bionic",
      "Base_AMI_Name": "{{ .SourceAMIName }}"
    },
    "ssh_username": "ubuntu"
  }],

  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "timeout 180 /bin/bash -c 'until stat /var/lib/cloud/instance/boot-finished 2>/dev/null; do echo waiting for cloud-init to finish...; sleep 1; done'",
        "sudo apt-get update && sudo apt-get install -y python"
      ]
    },
    {
      "type": "ansible",
      "ansible_env_vars": [
        "ANSIBLE_ROLES_PATH=./playbook/galaxy"
      ],
      "playbook_file": "./playbook/base-image.yml",
      "extra_arguments": [ "--extra-vars", "aws_region={{user `aws_region`}}" ]
    }
  ]
}
